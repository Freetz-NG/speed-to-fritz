#!/bin/bash
#orig=$SECONDS
echo "--------------------------------------------------------------------------------"
HOMEDIR=$(pwd)
export FWORIGDIR="Firmware.orig"
export FWBASE="$HOMEDIR/$FWORIGDIR"
export FWNEWDIR="Firmware.new"
export NEWDIR="$HOMEDIR/$FWNEWDIR"
export inc_DIR="${HOMEDIR}/includes"
TOOLS_SUBDIR="tools"
export TOOLS_DIR="${HOMEDIR}/${TOOLS_SUBDIR}"
export include_modpatch="${TOOLS_DIR}/freetz_patch"
FBMOD="7170"
SPNUM="900"
NEWIMG="fw_C_Speedport_900_34.04.57-0_Fritz_Box_DECT_W900V_29.04.76-0-sp2fr-09.10.14-r-593M-946_OEM-avm_de.image"
AVM_New_version="XX.XX.XX"
TCOM_New_version="XX.XX.XX"
#above settings are not in use if ./incl_var is included
. ./incl_var
if [ "$PATCH_OEM" != "y" ]; then
    echo "Option 'Force branding' was not selectet!"
    sleep 5
    exit 0
fi
if [ "$BUILDRECOVER" = "y" ]; then
 echo "--------------------------------------------------------------------------------"
 echo
 echo "If you don't want a recover firmware you can use 'Control C'"
 echo "or better disable this Option within Speed-to-fritz menu."
 echo "Generation of recover firmware takes about two times as"
 echo "long as it did take to build the patched firmware."
 echo
 echo "--------------------------------------------------------------------------------"
fi
#-------------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------------
RECOVERIMGC503="congstar_komplett_Box.AnnexB.04.69.recover-image.zip mirror http://congstar.custhelp.com/cgi-bin/congstar.cfg/php/enduser/fattach_get.php?p_sid=WtObzfOj&p_li=&p_accessibility=0&p_redirect=&p_tbl=9&p_id=549&p_created=1253088328&p_olh=0"
RECOVERIMG5050="ftp://ftp.avm.de/fritz.box/fritzbox.fon_5050/x_misc/fritz.box_fon_5050.12.04.31.recover-image.exe"
RECOVERIMG7113="ftp://ftp.avm.de/fritz.box/fritzbox.fon_wlan_7113/x_misc/deutsch/FRITZ.Box_Fon_WLAN_7113.04.67.recover-image.exe"
#RECOVERIMG7140="ftp://ftp.avm.de/fritz.box/fritzbox.fon_wlan_7140/x_misc/deutsch/fritz.box_fon_wlan_7140.annexb.04.33.recover-image.exe"
RECOVERIMG7140="ftp://ftp.avm.de/fritz.box/fritzbox.fon_wlan_7140/x_misc/english/annex_b/FRITZ.Box_Fon_WLAN_7140.AnnexB.en.04.67.recover-image.exe"
RECOVERIMG7141="ftp://ftp.avm.de/fritz.box/fritzbox.fon_wlan_7141/x_misc/deutsch/fritz.box_fon_wlan_7141.04.76.recover-image.exe"
RECOVERIMG7150="ftp://ftp.avm.de/fritz.box/fritzfon.7150/x_misc/FRITZ.Fon_7150.AnnexB.04.71.recover-image.exe"
RECOVERIMG7170="ftp://ftp.avm.de/fritz.box/fritzbox.fon_wlan_7170/x_misc/deutsch/FRITZ.Box_Fon_WLAN_7170.04.76.recover-image.exe"
RECOVERIMG7270="ftp://ftp.avm.de/fritz.box/fritzbox.fon_wlan_7270/x_misc/english/FRITZ.Box_Fon_WLAN_7270_16.AnnexB.en-de-es-it-fr.04.76.recover-image.exe"
#RECOVERIMG7270="ftp://ftp.avm.de/fritz.box/fritzbox.fon_wlan_7270_v3/x_misc/deutsch/fritz.box_fon_wlan_7270_v3.04.80.recover-image.exe"
RECOVERIMG7390="ftp://ftp.avm.de/fritz.box/fritzbox.fon_wlan_7390/x_misc/deutsch/fritz.box_wlan_7390_84.04.82.recover-image.exe"
#RECOVERIMG7270="ftp://ftp.avm.de/fritz.box/fritzbox.fon_wlan_7390/x_misc/deutsch/fritz.box_wlan_7390_84.04.82.recover-image.exe"
#-------------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------------
#5010, 5012, FB Fon und FB Fon WLAN
[ "${FBMOD}" == "FBDW" ] && R_IMG="$RECOVERIMG7170"
[ "${FBMOD}" == "FBFo" ] && R_IMG="$RECOVERIMG7170"
[ "${FBMOD}" == "5010" ] && R_IMG="$RECOVERIMG7170"
[ "${FBMOD}" == "5012" ] && R_IMG="$RECOVERIMG7170"
#5140, IAD5130, 7050
[ "${FBMOD}" == "5130" ] && R_IMG="$RECOVERIMG7170"
[ "${FBMOD}" == "5140" ] && R_IMG="$RECOVERIMG7170"
[ "${FBMOD}" == "7050" ] && R_IMG="$RECOVERIMG7170"
#5050
[ "${FBMOD}" == "5050" ] && R_IMG="$RECOVERIMG7170"
#7113, 7140, 7141, 7150
[ "${FBMOD}" == "7113" ] && R_IMG="$RECOVERIMG7170"
[ "${FBMOD}" == "7140" ] && R_IMG="$RECOVERIMG7170"
[ "${FBMOD}" == "7141" ] && R_IMG="$RECOVERIMG7170"
[ "${FBMOD}" == "7150" ] && R_IMG="$RECOVERIMG7170"
#for all newer 8mb boxes
[ "${FBMOD}" == "7170" ] && R_IMG="$RECOVERIMG7170"
#for all 16MB boxes
[ "${FBMOD}" == "7270" ] && R_IMG="$RECOVERIMG7270"
[ "${FBMOD}" == "7240" ] && R_IMG="$RECOVERIMG7270"
#7270v3
[ "${FBMOD}" == "7273" ] && R_IMG="$RECOVERIMG7270"
#for 7390
[ "${FBMOD}" == "7390" ] && R_IMG="$RECOVERIMG7270"
#for 7570
[ "${FBMOD}" == "7570" ] && R_IMG="$RECOVERIMG7270"
#for W501
[ "${SPNUM}" == "501" ] && R_IMG="$RECOVERIMG7170"
#for a Sinus500 
[ "${SPNUM}" == "500" ] && R_IMG="$RECOVERIMG7170"
#for a W503 
#[ "${SPNUM}" == "503" ] && R_IMG="$RECOVERIMGC503"
if  [ "$R_IMG" == "" ];then
    R_IMG="$RECOVERIMG7170"
    echo "No special original recover firmware selected, 7170 used as default!"
    sleep 5
fi
#-------------------------------------------------------------------------------------------------
. $inc_DIR/includefunctions
#echo "R_IMG: $R_IMG"
export FILENAME_R_IMG_PATH="$(get_item "$R_IMG" "1")" 
export MIRROR_R_IMG_PATH="$(get_item "$R_IMG" "2")"
export R_IMG_PATH="$(get_item "$R_IMG" "0")"
fwselect "$R_IMG_PATH" "$FWBASE" "R_IMG" "R_IMG"  "$MIRROR_R_IMG_PATH" "$FILENAME_R_IMG_PATH" "${SPNUM}V"
input_recover_file="$FWBASE/$(echo $R_IMG | sed -e "s/.*\///")"
#echo "input_recover_file: $input_recover_file"
#-------------------------------------------------------------------------------------------------
kernel_dir="$NEWDIR"
mkdir -p "$kernel_dir"
output_dir="$(basename "$input_recover_file" | sed -r 's/(.*)\.[^\.]*/\1/')"
mkdir -p "$output_dir"
#$HOMEDIR/recoversubscripts/split_image $HOMEDIR $NEWIMG $kernel_dir
## the same as split_image but with tar
[ "$BUILDRECOVER" = "y" ] || $HOMEDIR/recoversubscripts/extract_kernel.image $HOMEDIR $NEWIMG $kernel_dir
if ! [ -f "$kernel_dir/kernel.image" ];then
    echo "New kernel.image is missing!"
    sleep 20
    exit 1
fi
if ! [ -f "$input_recover_file" ];then
    echo "AVM $input_recover_file file is missing!"
    sleep 20
    exit 
fi
$HOMEDIR/recoversubscripts/split_recover $HOMEDIR $input_recover_file $output_dir
NEWNAME=$(echo "$NEWIMG" | sed -r 's/Speedport_//' | sed -r 's/-r-/-/' | sed -r 's/_OEM-/-/' | sed -r 's/M-/-/' | sed -r 's/-sp2fr-/-/' | sed -r 's/_W...V_/_/' | sed -r 's/_Fritz_Box//' | sed -r 's/_DECT//' | sed -r 's/-0_/_/'| sed -r 's/.image//' | sed -r 's/fw_//' | sed -r 's/C_//' | cut -c-70 | sed -r "s/-$//" )-recover.exe
#echo "new name lenght: ${#NEWNAME}"
#echo "new name: $NEWNAME"
new_recover_file="$kernel_dir/$NEWNAME"
#new_recover_file="$kernel_dir/Speedport_W${SPNUM}V.recover-image.exe"

[ "${SPNUM}" == "500" ] && sed -i -e "s|FRITZ!Box Fon WLAN 7170|FRITZ!Box    Sinus ${SPNUM:0:3} |g" "$output_dir/exe_start"
[ "${SPNUM}" == "501" ] && sed -i -e "s|FRITZ!Box Fon WLAN 7170|FRITZ!Box Speedp. W${SPNUM:0:3}V|g" "$output_dir/exe_start"
SPNUM+="X"
if [ ${SPNUM:3:1} == "X" ]; then
 sed -i -e "s|FRITZ!Box Fon WLAN ${FBMOD}|FRITZ!Box Speedp. W${SPNUM:0:3}V|g" "$output_dir/exe_end"
 sed -i -e "s|FRITZ!Box Fon WLAN ${FBMOD}|FRITZ!Box Speedp. W${SPNUM:0:3}V|g" "$output_dir/exe_start"
     sed -i -e "s|FRITZ!Box Fon WLAN 7170|FRITZ!Box Speedp. W${SPNUM:0:3}V|g" "$output_dir/exe_start"
     sed -i -e "s|FRITZ!Box Fon WLAN 7270|FRITZ!Box Speedp. W${SPNUM:0:3}V|g" "$output_dir/exe_start"
else
 sed -i -e "s|FRITZ!Box Fon WLAN ${FBMOD}|FRITZ!Box Fon WLAN ${SPNUM:0:4}|g" "$output_dir/exe_start"
     sed -i -e "s|FRITZ!Box Fon WLAN 7170|FRITZ!Box Fon WLAN ${SPNUM:0:4}|g" "$output_dir/exe_start"
     sed -i -e "s|FRITZ!Box Fon WLAN 7270|FRITZ!Box Fon WLAN ${SPNUM:0:4}|g" "$output_dir/exe_start"
fi
#0x1a249
sed -i -e 's|\x85\xC0\x59\x0F\x85\xFA\x01\x00\x00\x8D\x85|\x85\xC0\x59\x90\x90\x90\x90\x90\x90\x8D\x85|' "$output_dir/exe_start"
#.80
sed -i -e 's|\x85\xC0\x59\x0F\x85\xEF\x01\x00\x00\x8D\x85|\x85\xC0\x59\x90\x90\x90\x90\x90\x90\x8D\x85|' "$output_dir/exe_start"
#	test eax,eax pop eax => 85 C0 59
#	jz => 0F 85
#sed -i -e 's| 85 C0 59     0F 85    EF 01 00 00 8D 85
#0x1a25e
sed -i -e 's|\x85\xC0\x59\x0F\x85\x26\x02\x00\x00\x39\x9D|\x85\xC0\x59\x90\x90\x90\x90\x90\x90\x39\x9D|' "$output_dir/exe_start"
#.80
sed -i -e 's|\x85\xC0\x59\x0F\x85\x20\x02\x00\x00\x39\x9D|\x85\xC0\x59\x90\x90\x90\x90\x90\x90\x39\x9D|' "$output_dir/exe_start"
#sed -i -e 's| 85 C0 59     0F 85    20 02 00 00 39 9D
#0x1a684
#0x1a249
sed -i -e 's|\x0F\x85\xFA\x01\x00\x00\x8D\x85|\x90\x90\x90\x90\x90\x90\x8D\x85|' "$output_dir/exe_start"
#0x1a25e
sed -i -e 's|\x0F\x85\x26\x02\x00\x00\x39\x9D|\x90\x90\x90\x90\x90\x90\x39\x9D|' "$output_dir/exe_start"
#0x1a684
sed -i -e 's|\x74\x59\x83\xFF\xFF\x89\xBD|\xEB\x59\x83\xFF\xFF\x89\xBD|' "$output_dir/exe_start"
#0x18520
sed -i -e 's|\xC4\x0C\x85\xC0\x74\x4A|\xC4\x0C\x85\xC0\xEB\x4A|' "$output_dir/exe_start"
#0x1a310
sed -i -e 's|\x73\x06\x89\x1D\x50\xB6\x8F\x00|\x73\x00\x90\x90\x50\xB6\x8F\x00|' "$output_dir/exe_start"
#0x1a308
sed -i -e 's|\x72\x0E\x81\xFF\xE8\x03\x00\x00|\x72\x08\x81\xFF\xE8\x03\x00\x00|' "$output_dir/exe_start"
#.80
sed -i -e 's|\x72\x0B\x39\x7D\x08\x73\x06\x89|\x72\x05\x39\x7D\x08\x73\x06\x89|' "$output_dir/exe_start"
#0x1a5f0
#Check Kernel size
#0x1846D
sed -i -e 's|\x77\x48\x8D\x85\x08|\xEB\x48\x8D\x85\x08|' "$output_dir/exe_start"
#.80
sed -i -e 's|\x77\x45\x8D\x85\x10|\xEB\x45\x8D\x85\x10|' "$output_dir/exe_start"
#0x184C1
sed -i -e 's|\x73\x4A\x8D\x95\x08\xFC\xFF|\xEB\x4A\x8D\x95\x08\xFC\xFF|' "$output_dir/exe_start"
#.80
sed -i -e 's|\x00\x3B\xC8\x73\x4A\x8D\x95|\x00\x3B\xC8\xEB\x4A\x8D\x95|' "$output_dir/exe_start"
#0x1a5f0 .26 firmware
#sed -i -e 's|\x73\x4A\x8D\x95\x1C\xFC\xFF\xFF\x52\x51\x50\x68\x4C\x61\x90\x00|\xEB\x4A\x8D\x95\x1C\xFC\xFF\xFF\x52\x51\x50\x68\x4C\x61\x90\x00|' "./$output_dir/exe_start"
rplbytes="90 90 90 90 90 90 8d 85"
[ "$rplbytes" != "$(tools/hexgrep "$rplbytes" "$output_dir/exe_start" | sed 's/.*://')" ] && echo "-- Firmware version check remove error!" && checkerror="y"
rplbytes="90 90 90 90 90 90 39 9d"
[ "$rplbytes" != "$(tools/hexgrep "$rplbytes" "$output_dir/exe_start" | sed 's/.*://')" ] && echo "-- OEM check remove error!" && checkerror="y"
rplbytes="eb 59 83 ff ff 89 bd"
[ "$rplbytes" != "$(tools/hexgrep "$rplbytes" "$output_dir/exe_start" | sed 's/.*://')" ] && echo "-- Kernel check remove error!" && checkerror="y"
#rplbytes="c4 0c 85 c0 eb 4a"
#[ "$rplbytes" != "$(tools/hexgrep "$rplbytes" "$output_dir/exe_start" | sed 's/.*://')" ] && echo "-- CRC check remove error!" && checkerror="y"
#rplbytes="73 00 90 90 50 b6 8f 00"
#[ "$rplbytes" != "$(tools/hexgrep "$rplbytes" "$output_dir/exe_start" | sed 's/.*://')" ] && echo "-- Urloader update remove error!" && checkerror="y"
rplbytes="72 08 81 ff e8 03 00 00"
rplbytes1="72 05 39 7d 08 73 06 89" 
if ! ( [ "$rplbytes" == "$(tools/hexgrep "$rplbytes" "$output_dir/exe_start" | sed 's/.*://')" ] || \
 [ "$rplbytes1" == "$(tools/hexgrep "$rplbytes1" "$output_dir/exe_start" | sed 's/.*://')" ] ) ; then 
 echo "-- Urloader2 update remove error!" && checkerror="y"
fi
#rplbytes="eb 4a 8d 95 1c fc ff ff 52 51 50 68 4c 61 90 00"
#[ "$rplbytes" != "$(tools/hexgrep "$rplbytes" "$output_dir/exe_start" | sed 's/.*://')" ] && echo "-- Check kernel size remove error!" && checkerror="y"
if ! ( [ "${R_IMG}" == "${RECOVERIMG7140}" ] || [ "${R_IMG}" == "${RECOVERIMG5050}" ] ) ; then
 {
 rplbytes="00 3b c8 eb 4a 8d 95"
 [ "$rplbytes" != "$(tools/hexgrep "$rplbytes" "$output_dir/exe_start" | sed 's/.*://')" ] && echo "-- Check kernel size remove error!" && checkerror="y"
 rplbytes="eb 48 8d 85 08"
 rplbytes1="eb 45 8d 85 10"
 if ! ( [ "$rplbytes" == "$(tools/hexgrep "$rplbytes" "$output_dir/exe_start" | sed 's/.*://')" ] || \
 [ "$rplbytes1" == "$(tools/hexgrep "$rplbytes1" "$output_dir/exe_start" | sed 's/.*://')" ] ) ; then
 echo "-- Check2 kernel size remove error!" && checkerror="y"
 fi
 }
fi
act_size=`ls -l "$output_dir/kernel.image" | sed -e 's/[^0-9]/#/g' | sed -e 's/#\+[0-9]\+#\+\([0-9]\+\).*/\1/'`
new_act_size=`ls -l "$kernel_dir/kernel.image" | sed -e 's/[^0-9]/#/g' | sed -e 's/#\+[0-9]\+#\+\([0-9]\+\).*/\1/'`
act_diff=$((act_size - new_act_size))
#echo "original size= $act_size, new size= $new_act_size, difference= $act_diff"
error_size=$((new_act_size - act_size))
[ -n "$kernel_size" ] && [ "$act_size" -lt "$kernel_size" ] && kernel_diff_size=$((kernel_size - act_size))
if [ $act_size -lt $new_act_size ]; then
    echo "ERROR!! New kernel.image does not fit into recover firmware." && checkerror="y"
    [ -n "$kernel_size" ] && [ "$kernel_diff_size" -gt 0 ] && echo  "Space within the recover firmware is smaller as in the flash by: $kernel_diff_size Bytes."
fi

AVM_New_version="$AVM_VERSION_MAJOR.$AVM_VERSION"
#TCOM_New_version="$TCOM_VERSION_MAJOR.$TCOM_VERSION"
#echo "New recoverversion: $AVM_New_version"
#echo "New tcom recoverversion: $TCOM_New_version"
OldRversion="$(dd if=$output_dir/exe_mid bs=1 count=16  2> /dev/null)"
OldRversion_C="$(dd if=$output_dir/exe_mid bs=1 count=16  2> /dev/null | sed 's/-//' | tr -d '[:alpha:]' | sed 's/-\.//' )"
New_Rversion=$AVM_New_version$(dd if=$output_dir/exe_mid bs=1 count=16  2> /dev/null | sed 's/-it/   /' | sed 's/-en/   /' | sed 's/-fr/   /' | sed 's/-sp/   /' | sed 's/ \./  /' | sed "s|$OldRversion_C||")
[ "$ORI" != "y" ] && echo "New recoverversion: .$New_Rversion."
#echo "Old recoverversion : .$OldRversion."
#echo "Old recoverversionC: .$OldRversion_C."
[ "$ORI" != "y" ] && sed -i -e "s|$OldRversion|$New_Rversion|" "$output_dir/exe_mid"

dd if=/dev/zero bs=1 count=$act_diff >$output_dir/zerro.image 2> /dev/null
#echo "concat all parts ..."
cat $output_dir/exe_start >$new_recover_file
cat $kernel_dir/kernel.image >>$new_recover_file
cat $output_dir/zerro.image >>$new_recover_file
cat $output_dir/exe_mid >>$new_recover_file
cat $output_dir/urlader.image >>$new_recover_file
cat $output_dir/exe_end >>$new_recover_file
if [ ${SPNUM:3:1} == "X" ]; then
 if  ! `cat "$new_recover_file" | grep -q "FRITZ!Box Speedp. W${SPNUM:0:3}V"`; then
  echo "-- Text not changed to: FRITZ!Box Speedp. W${SPNUM:0:3}V"
 fi
fi
chmod -x $new_recover_file
act_size=`ls -l "$input_recover_file" | sed -e 's/[^0-9]/#/g' | sed -e 's/#\+[0-9]\+#\+\([0-9]\+\).*/\1/'`
new_act_size=`ls -l "$new_recover_file" | sed -e 's/[^0-9]/#/g' | sed -e 's/#\+[0-9]\+#\+\([0-9]\+\).*/\1/'`
#echo "actual size= $act_size,  new actual size= $new_act_size" 
[ $act_size -eq $new_act_size ] || echo "ERROR! Reduce size of kernel.image by: $error_size Bytes." 
[ $act_size -eq $new_act_size ] && [ -f "$new_recover_file" ] && echo -e "New Recover:\n$new_recover_file\n\
Transfer this file to windows and start it to push the new firmware to your router.\n\
This is the 3rd method to update Firmware, in most cases this will be the most \n\
reliable way to do a firmware update.\n\
The fastest way is to use the speed-to-fritz LINUX FTP push option.\n\
Update via Web interface is preferable in some cases, if settings should be\n\
restored or push FTP transfer did not work because PC network settings ware wrong."
if [ "$checkerror" == "y" ]; then
    rm "$new_recover_file"
    echo "No Recover image was built!"
    echo
fi
#((elasped=SECONDS-orig))
#echo "elasped time: ${elasped}s"

[ "$BUILDRECOVER" = "y" ] && exit 0
echo "All done, Press 'ENTER' to finish"
while !(read -s);do
	sleep 1
done
exit 0
