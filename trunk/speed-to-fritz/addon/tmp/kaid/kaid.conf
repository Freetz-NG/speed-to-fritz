################################################################################
#Xlink Kai auf die Fritzbox installieren
#1. kaid engine (linux mips)
#Folgendes muss in der kaid.conf eingestellt werden:
#Die Ports und IP Adressen lasst ihr unverndert.
#Als naechstes aendert ihr den Eintrag 
#"SniffDevice = lan" steht. 
#Dort muesst ihr die Schnittstelle des Speedports zur Xbox angeben.
#Bei den meisten boxen ist "SniffDevice = lan" (es kann auch eth0 oder eth1 heien).
#Bei "MacLearningMode = FirstFound" muesst ihr zwischen 3 Einstellungen waehlen.
#Geht ihr immer mit mehreren Boxen ueber die Fritz!Box Online, so koennt ihr die Option "Auto" waehlen welche aber die CPU der FBox ziemlich beansprucht. 
#Alternativ koennt ihr "Manual" waehlen und die ganzen MAC Adressen von Hand hinter "ConsoleMacs =" eingeben, dabei die Adressen durch ; trennen und hinter der letzten auch nochmal ein ;
#Falls ihr immer nur eine XBox (muss nicht die selbe sein) Online habt, koenntet ihr "MacLearningMode = FirstFound" nehmen.
#Jetzt nur noch bei "Username =  Password =  AutoLogin = 1 den Kai Username und Passwort eingeben und AutoLogin auf 1 setzen. 
#Speichern.
#Nun zum XBMC
#Im xbmc muesst ihr noch in den Einstellungen -> Programme -> XLink Kai die IP des Speedports auf den sich die Engine befindet umstellen (192.168.178.1). 
#Username und Passwort muesst ihr nicht hinterlegen, da ihr das ja bereits in der kaid.conf gemacht habt.

# Kai Engine Configuration File
#
# This file contains the configuration options for Kai Engine.
# There are some fields which can be modified, the descriptions of these fields 
# and their default values are listed below
#

# Verbosity		: Debug output verbosity. Options are as follows:
#			  0 - Silent apart from starting / stopping messages, and init failures.
#			  1 - As 1, but shows import events such as UI attach/detach, console detection,
#			      orb connection / loss.
#			  2 - As 2, but more detailed, showing thread start/stop events, DHCP 
#			      events, and other important information.
#			  3 - Debug - same as 2, but with lots of extra information - useful
#			      for diagnosing segfaults etc.
Verbosity = 2

# UIBind        	: Specifies which ip/port kaid will use to listen for controller
#                 	  UIs
#			  Ex.: 192.168.0.138, 10.0.0.1:34522, :34522 (default)
UIBind = :34522

# OrbPort		: Specifies which port kaid will use to probe(UDP) and talk to
#                   	  Orbitals (TCP)
#					Ex.: 34525
#	Default		: 34525 (default)
OrbPort = 34525

# EngineBind		: Specifies the IP:port to listen for the engine (UDP socket);
#                   	  (port should be forwarded in your router if using NAT)
#                   	  Ex.: 69.69.69.69, 69.69.69.69:37500, :37500
EngineBind = :0

# Engine PAT		: Tells the orbital server to use your perceived UDP port, as opposed to the
#			  one specified in EngineBind. Ignored if EngineBind is 0.
EnginePAT = 0

# SniffDevice		: NIC to sniff for console traffic (eth0, ethX, ...). Will be used
#		 	  for packet injection too.
#			  Ex.: eth0 (default), en0 (Mac OSX), 
SniffDevice = lan

# MacLearningMode	: Tells the engine how it should learn about your console(s).
#			  There's still the old, legacy mode: Manual, where you should enter you
#			  console(s) mac address(es) under ConsoleMacs.
#			  New options are: Auto and FirstFound.
#						 * Auto: Using this mode, each and every packet on your network is
#						sniffed and analyzed by Kai Engine. Those who come from remote hosts
#						are tagged using a mac cache mechanism and passed to the Ethernet
#						frame handler. Inside that handler, if ether src doesn't correspond
#						to any of the remote mac addresses, engine assumes its local and adds
#						to local device cache. Keeps doing it for the engine lifetime, and
#						behaves the same way all the times it runs. Uses more CPU than any
#						other mode (Except FirstRun that behaves in the same way for the first
#						time it runs).
#						This mode allow you to use any number of consoles.
#					 * FirstFound: Now, this one is tricky and maybe the most balanced option for
#						those using only one console. The engine will behave in auto mode until 1
#						*ONE* local device is found. After that point, the pcap sniffer is restarted
#						using that mac adddress as pre-filter. All this happens in real time, no
#						restart is needed. No fs cache file is used, and it will behave like this
#						everytime it runs. After the device is found, the engine will behave exactly
#						like Manual mode. This mode will have the same CPU load until it finds a
#						local device. Will be very fast if you already had your console turned on.
#					 * Manual: Finally, Manual mode. This legacy mode should be used whenever
#						performance is an issue. You'll have to specify your console(s) mac address(es)
#						yourself. No processing is done for sniffed packet besides sending to
#						remotes. This is the Turbo Boost Mode.
MacLearningMode	= FirstFound
IgnoreMacs = 

# *** If using MacLearningMode = Manual, make sure to use this option ***
# ConsoleMacs		: You can and should specify your console(s) mac address(es)
#                   	  here. They'll be used as pcap filters reducing CPU load
#                   	  processing each packet. It will also avoid sniffing 
#                   	  incoming/injected packets to be caught. Format must be
#                   	  standard tcpdump format:  Ex.: 00:ff:dd:5b:31:ac
#                   	  You can specify more than one mac address in a ; separated 
#                   	  list. Will be parsed and "OR'ed" in filter. List should end
#                   	  with ";" or last element will be discarded.
ConsoleMacs = 

# ConfigURL		: URL where orb list is published (and extra stuff) - best not to mess with this.
ConfigURL = www.teamxlink.co.uk/connector/clientgetconfig.php

#Authentication - set username and password and AutoLogin=1 for an easy life...
Username = admin
Password = 0000
AutoLogin = 1

# Xbox DHCP setting - please leave alone, unless playing with emulators or DoomX etc.
XBoxHomebrew = 0
