#!/bin/bash
parse_copy_rcconf ()
{
# suche format "export CONFIG_"
 parse_line=`sed -n -e "/## Box spezifische Konfiguration/,/OEM_tmp/{/export/p}" "$2" | grep -e "${1}"`
 if [ -z "$parse_line" ] ; then
 return
 fi
 for i_parse in $parse_line ; do
 case $i_parse in
  CONFIG_*)
  conf_exec_str="export ${i_parse%%=*}=${i_parse#*=}"
#  eval $conf_exec_str
# echo2 "substitute: $conf_exec_str"
#    value=`echo ${i_parse#*=} | tr -d '"'`
    sed -i -e "s|export ${i_parse%%=*}=.*$|${conf_exec_str}|g" "$3/etc/init.d/rc.conf"
    if ! `sed -n -e "/## Box spezifische Konfiguration/,/OEM_tmp/{/export/p}" "$3/etc/init.d/rc.conf" | grep -q "${i_parse%%=*}"` ; then
    sed -i -e "/OEM_tmp=\`cat/i \
${conf_exec_str}" "$3/etc/init.d/rc.conf"
# echo2 "add:       $conf_exec_str"
    fi
  ;;
 esac
 done
}
#exeption CONFIG_PRODUKT_NAME has to be quoted in this way  CONFIG__PRODUKT_NAME
parse_copy_rcinit ()
{
# suche format "export CONFIG_"
 parse_line=`grep "HW=[0-9]* OEM=all ${1#*_}" "${2}" | grep -v 'LANG='`
 if [ -z "$parse_line" ] ; then
 return 
 fi
 for i_parse in $parse_line ; do
 case $i_parse in
 HW=*)
 ;;
 OEM=*)
 ;;
 LANG=*)
 ;;
 _*)
 conf_exec_str="export CONFIG${i_parse%%=*}=\"`echo ${i_parse#*=} | tr '#' ' '`\""
# eval $conf_exec_str
# echo2 "copy_overwrite: $conf_exec_str"
 sed -i -e "s|export CONFIG${i_parse%%=*}=.*$|${conf_exec_str}|g" "$3/etc/init.d/rc.conf"
 if ! `sed -n -e "/## Box spezifische Konfiguration/,/OEM_tmp/{/export/p}" "$3/etc/init.d/rc.conf" | grep -q "${i_parse%%=*}"` ; then
 sed -i -e "/OEM_tmp=\`cat/i \
${conf_exec_str}" "$3/etc/init.d/rc.conf"
# echo2 "copy_add: $conf_exec_str"
 fi
 ;;
 *)
 conf_exec_str="export CONFIG_${i_parse%%=*}=\"${i_parse#*=}\""
# eval $conf_exec_str
# echo2 "copy overwrite: $conf_exec_str"
  sed -i -e  "s|export CONFIG_${i_parse%%=*}=.*$|${conf_exec_str}|g" "$3/etc/init.d/rc.conf"
  if ! `sed -n -e "/## Box spezifische Konfiguration/,/OEM_tmp/{/export/p}" "$3/etc/init.d/rc.conf" | grep -q "${i_parse%%=*}"` ; then
 sed -i -e "/OEM_tmp=\`cat/i \
 ${conf_exec_str}" "$3/etc/init.d/rc.conf"
# echo2 "copy add:    $conf_exec_str"
  fi 
 ;;
  esac
 done
}
# sets all variables matching $1 found in $2
parse_read_rcinit ()
{
# suche format "HW=<hwr><leerzeichen>OEM=<oem><leerzeichen>"
 parse_line=`grep "HW=[0-9]* OEM=all ${1#*_}=.*" "${2}/etc/init.d/rc.init" | grep -v 'LANG='`
 if [ -z "$parse_line" ] ; then
 return 
 fi
 for i_parse in $parse_line ; do
 case $i_parse in
 HW=*)
 ;;
 OEM=*)
 ;;
 LANG=*)
 ;;
 _*)
 conf_exec_str="export CONFIG${i_parse%%=*}=\"`echo ${i_parse#*=} | tr '#' ' '`\""
 eval $conf_exec_str
 ;;
 *)
 conf_exec_str="export CONFIG_${i_parse}"
 eval $conf_exec_str
 ;;
 esac
 done
}
# sets all variables matching $1 found in $2
parse_read_rcconf ()
{
# suche format "export CONFIG_"
 parse_line=`sed -n -e "/## Box spezifische Konfiguration/,/OEM_tmp/{/export/p}" "$2/etc/init.d/rc.conf" | grep -e "${1}"`
 if [ -z "$parse_line" ] ; then
 return
 fi
 for i_parse in $parse_line ; do
 case $i_parse in
  CONFIG_*)
  conf_exec_str="export ${i_parse%%=*}=${i_parse#*=}"
  eval $conf_exec_str
  ;;
 esac
 done
}
# Delete old parts and INSERT DEFAULT SECTION
del_section ()
{
sed -i -e '/parse_config.*$/,/}/d' "${1}"
sed -i -e '/parse_hw_revision=all.*$/,/fi/d' "${1}"
sed -i -e '/parse_hw_revision=.*$/d' "${1}"
sed -i -e '/parse_config.*$/d' "${1}"
sed -i -e '/parse_oem=.*$/d' "${1}"
sed -i -e '/parse_language=.*$/d' "${1}"

sed -i -e '/Language=`echo.*$/,/OEM_tmp=`cat $CONFIG_ENVIRONMENT_PATH\/firmware_version`/d' "${1}"
sed -i -e 's|Language=`grep language /etc/default.language`|Language=`grep language /etc/default\.language`\
##########################################################################################\
## exporting ...\
##########################################################################################\
CONFIG_VERSION=`cat /etc/.version`\
CONFIG_SUBVERSION=`cat /etc/.subversion`\
export CONFIG_VERSION\
export CONFIG_SUBVERSION\
export HWRevision\
export Country\
export Language\
export ETC_CONFIG_PATH\
export CONFIG_ENVIRONMENT_PATH\
##########################################################################################\
## Box spezifische Konfiguration (aus rc.init)\
##########################################################################################\
OEM_tmp=`cat $CONFIG_ENVIRONMENT_PATH/firmware_version`|' "${1}"
sed -i -e "s/Language=\`grep language \/etc\/default\.language\`/Language=\`grep language \/etc\/default\.language\`\n\
Language=\`echo \${Language##language} | tr -d ' '\`/" "${1}"
#end SECTION INSERT 
}
#########################################################################
# function set_config VARIABLE=VALUE, RC_PATH                           #
#                                                                       #
# 'VARIABLE=VALUE' in rc.conf                                           #
# Entry for 'VARIABLE=' must exist to be set to 'VALUE'.                #
# All lines containing the passed on "variablename=" are changed        #
#########################################################################
function set_config()
{
    sed -i -e "s/${1%%=*}=\".*$/${1%%=*}=\"${1#*=}\"/g" "${2}/etc/init.d/rc.conf"
}
#########################################################################
# function read_config VARIABLE, RC_PATH                                #
#                                                                       #
# Reads value of 'VARIABLE' from source file ( rc.init, rc.conf         #
# respectively) and returns the result in global Variable               #
# If no match for VARIABLE is found, global Variable is not altered     #
#########################################################################
function read_config()
{
 if [ -n "$1" ]; then
  if [ -e "$2/etc/init.d/rc.init" ] ; then
	parse_read_rcinit "$1" "$2" 

   else
        parse_read_rcconf "$1" "$2" 
  fi
  else
  return 1
 fi
 return 0
}
#########################################################################
# function copy_config VARIABLE SOURCE_RC_PATH DEST_RC_PATH             #
#                                                                       #
# Copies VALUE of 'VARIABLE' from source file (rc.init or rc.conf,      #
# respectively) to rc.conf destination.                                 # 
# If no match for VARIABLE is found, Variable is added in file rc.conf  #
#########################################################################
function copy_config()
{
 if [ -n "$1" ]; then
  if [ -e "$2/etc/init.d/rc.init" ] ; then
	parse_copy_rcinit "$1" "$2/etc/init.d/rc.init" "$3"

   else
        parse_copy_rcconf "$1" "$2/etc/init.d/rc.conf" "$3"
  fi
  else
  return 1
 fi
 return 0
}
